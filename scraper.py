import os
import requests
from bs4 import BeautifulSoup
import json

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ---
# –°–ø–∏—Å–æ–∫ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ (–∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞)
PRODUCTS_TO_TRACK = ["mleko", "mas≈Ço", "chleb", "jajka", "ser ≈º√≥≈Çty", "kurczak"]

# --- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–∫—Ä–µ–π–ø–∏–Ω–≥–∞ ---

def scrape_biedronka():
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫—Ä–µ–π–ø–∏–Ω–≥–∞ –∞–∫—Ü–∏–π —Å —Å–∞–π—Ç–∞ Biedronka.
    –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–∞–π—Ç–∞ –º–æ–∂–µ—Ç –º–µ–Ω—è—Ç—å—Å—è, —á—Ç–æ –ø–æ—Ç—Ä–µ–±—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —ç—Ç–æ–≥–æ –∫–æ–¥–∞.
    """
    found_products = {}
    try:
        # Biedronka —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫—É—é –∑–∞–≥—Ä—É–∑–∫—É, –ø—Ä—è–º–æ–π —Å–∫—Ä–µ–π–ø–∏–Ω–≥ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞—Ç—Ä—É–¥–Ω–µ–Ω.
        # –≠—Ç–æ—Ç –ø—Ä–∏–º–µ—Ä –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –±–∞–∑–æ–≤—ã–π –ø–æ–¥—Ö–æ–¥.
        # –î–ª—è –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –∞–Ω–∞–ª–∏–∑ —Å–µ—Ç–µ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ —Å–∞–π—Ç–∞.
        # –í –¥–∞–Ω–Ω–æ–º –ø—Ä–∏–º–µ—Ä–µ –º—ã –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —É—Å–ª–æ–≤–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ.
        url = "https://www.biedronka.pl/pl"
        response = requests.get(url, headers={'User-Agent': 'Mozilla/5.0'})
        response.raise_for_status()
        soup = BeautifulSoup(response.text, 'html.parser')

        # –ü–æ–∏—Å–∫ –ø–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–º—É —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        page_text = soup.get_text().lower()
        for product in PRODUCTS_TO_TRACK:
            if product.lower() in page_text:
                # –ù–∞—à–ª–∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ, –Ω–æ –±–µ–∑ –¥–µ—Ç–∞–ª–µ–π –æ —Ü–µ–Ω–µ.
                # –î–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω—É–∂–µ–Ω –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–π —Å–∫—Ä–µ–π–ø–∏–Ω–≥.
                if "Biedronka" not in found_products:
                    found_products["Biedronka"] = []
                found_products["Biedronka"].append(f"Znaleziono wzmiankƒô o produkcie: {product.capitalize()}")

    except requests.exceptions.RequestException as e:
        print(f"B≈ÇƒÖd podczas –ø–∞—Ä—Å–∏–Ω–≥–∞ Biedronka: {e}")
    return found_products

def scrape_kaufland():
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫—Ä–µ–π–ø–∏–Ω–≥–∞ –∞–∫—Ü–∏–π —Å —Å–∞–π—Ç–∞ Kaufland.
    –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–∞–π—Ç–∞ –º–æ–∂–µ—Ç –º–µ–Ω—è—Ç—å—Å—è, —á—Ç–æ –ø–æ—Ç—Ä–µ–±—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —ç—Ç–æ–≥–æ –∫–æ–¥–∞.
    """
    found_products = {}
    try:
        # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ Biedronka, Kaufland –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ª–æ–∂–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É.
        # –≠—Ç–æ—Ç –ø—Ä–∏–º–µ—Ä –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—â–∏–π –ø–æ–¥—Ö–æ–¥.
        url = "https://www.kaufland.pl/oferta.html"
        response = requests.get(url, headers={'User-Agent': 'Mozilla/5.0'})
        response.raise_for_status()
        soup = BeautifulSoup(response.text, 'html.parser')

        page_text = soup.get_text().lower()
        for product in PRODUCTS_TO_TRACK:
            if product.lower() in page_text:
                if "Kaufland" not in found_products:
                    found_products["Kaufland"] = []
                found_products["Kaufland"].append(f"Znaleziono wzmiankƒô o produkcie: {product.capitalize()}")

    except requests.exceptions.RequestException as e:
        print(f"B≈ÇƒÖd podczas –ø–∞—Ä—Å–∏–Ω–≥–∞ Kaufland: {e}")
    return found_products


# --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ Telegram ---

def send_telegram_message(message):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram —á–∞—Ç.
    """
    token = os.getenv("TELEGRAM_BOT_TOKEN")
    chat_id = os.getenv("TELEGRAM_CHAT_ID")
    if not token or not chat_id:
        print("–û—à–∏–±–∫–∞: –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_BOT_TOKEN –∏ TELEGRAM_CHAT_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.")
        return

    url = f"https://api.telegram.org/bot{token}/sendMessage"
    payload = {
        'chat_id': chat_id,
        'text': message,
        'parse_mode': 'Markdown'
    }
    try:
        response = requests.post(url, json=payload)
        response.raise_for_status()
        print("–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram.")
    except requests.exceptions.RequestException as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram: {e}")
        print(response.json())

# --- –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ ---

if __name__ == "__main__":
    all_found_products = {}
    all_found_products.update(scrape_biedronka())
    all_found_products.update(scrape_kaufland())

    if not all_found_products:
        print("–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Å–∫–∏–¥–æ–∫ –Ω–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã.")
        # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ –º–æ–∂–Ω–æ —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–æ–∫—É, —á—Ç–æ–±—ã –≤—Å–µ–≥–¥–∞ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        # send_telegram_message("–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Å–∫–∏–¥–æ–∫ –Ω–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã.")
    else:
        message_body = "üî• *–ù–∞–π–¥–µ–Ω—ã —Å–∫–∏–¥–∫–∏ –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –≤–∞—Å —Ç–æ–≤–∞—Ä—ã:*\n\n"
        for store, products in all_found_products.items():
            message_body += f"üõí *{store}*\n"
            for product_info in products:
                message_body += f"- {product_info}\n"
            message_body += "\n"

        send_telegram_message(message_body)
